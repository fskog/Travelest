@page "/fetchdata"
@inject HttpClient Http
@using Newtonsoft.Json;
@using Newtonsoft.Json.Converters;


<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>Last updated @DateTime.Parse(forecasts.Time).ToLocalTime().ToShortTimeString()</p>




    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp.</th>
                <th>Wind</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts.ForecastData)
            {
                var temperatureObject = forecast.Parameters.Where(x => x.DataType == "t").First();
                var windObject = forecast.Parameters.Where(x => x.DataType == "ws").First();
                <tr>
                    <td>@DateTime.Parse(forecast.Time)</td>
                    <td>@temperatureObject.Values.FirstOrDefault() @temperatureObject.Unit</td>
                    <td>@windObject.Values.FirstOrDefault() @windObject.Unit</td>
                </tr>
            }

        </tbody>
    </table>
}

@functions {
    //WeatherForecast[] forecasts;
    SmhiForecast forecasts;

    protected override async Task OnInitAsync()
    {
        await Task.Delay(1000);
        //forecasts = await Http.GetJsonAsync<WeatherForecast[]>("sample-data/weather.json");
        var response = await Http.GetStringAsync("https://opendata-download-metfcst.smhi.se/api/category/pmp3g/version/2/geotype/point/lon/18.808593/lat/59.288331/data.json");
        System.Console.WriteLine("Response Json: \n" + response);

        try
        {
            forecasts = JsonConvert.DeserializeObject<SmhiForecast>(response);
        }
        catch (Exception e)
        {
            System.Console.WriteLine("Error: " + e.Message);
        }
        //System.Console.WriteLine("Forecast " + forecasts.ToString());
    }

    class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public int TemperatureF { get; set; }

        public string Summary { get; set; }
    }
}
